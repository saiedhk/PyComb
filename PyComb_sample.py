# Program to showcase PyComb functions.
# This is not a test program. It is just a sample.
# Each function in PyComb has been tested and verified against
# known results in reference tables.
# There are no known bugs.
# Caveat emptor.


import PyComb

print("PyComb.prod(45,100)")
print(PyComb.prod(45,100))

print("PyComb.binomial(450,150)")
print(PyComb.binomial(450,150))

print("PyComb.multinomial([20,50,40,10,10,30])")
print(PyComb.multinomial([20,50,40,10,10,30]))

print("PyComb.catalan(200)")
print(PyComb.catalan(200))

print("PyComb.stirling1(29,15)")
print(PyComb.stirling1(29,15))

print("PyComb.stirling2(85,17)")
print(PyComb.stirling2(85,17))

print("PyComb.bell(70)")
print(PyComb.bell(70))

print("PyComb.lah(75,50)")
print(PyComb.lah(75,50))

print("PyComb.delannoy(180,120)")
print(PyComb.delannoy(180,120))

print("PyComb.motzkin(186)")
print(PyComb.motzkin(186))

print("PyComb.narayana(56,30)")
print(PyComb.narayana(56,30))

print("PyComb.schroder(100)")
print(PyComb.schroder(100))

print("PyComb.eulerian(80,46)")
print(PyComb.eulerian(80,46))

"""
When you run the above program, the following output will be produced:

PyComb.prod(45,100)
35107855920014967941311748817536360245313533127549918530485803045306923223637981174693888000000000000000
PyComb.binomial(450,150)
991275799579461852581870717609886925058980866721833210814091742711258246863091517265111294276237344131556276652899696730064
PyComb.multinomial([20,50,40,10,10,30])
2235761856264821572055996080104680297001293759287559387585261495667531910318510344343699972798287328078848000
PyComb.catalan(200)
512201493211017079467541693136328292324432464582475861864920694407578768023144072628540276213813397768975366156750120
PyComb.stirling1(29,15)
211821088794711294496815
PyComb.stirling2(85,17)
985607117690128874270520922250107369649290441494081144658128523918560345424283513146469415
PyComb.bell(70)
18075003898340511237556784424498369141305841234468097908227993035088029195
PyComb.lah(75,50)
28598072664067214753003261184122656994501416455559817723904000000
PyComb.delannoy(180,120)
64956161681401226028888345597957460942320026409033673361208768598048474741275641649418933325596543399644174529
PyComb.motzkin(186)
31673598644325685295892202605889103138268788536071762890280096344492972753241925006644
PyComb.narayana(56,30)
876493573861628855005777632960
PyComb.schroder(100)
28747611153504860266534250007458881388313583561117443629896620307440340890
PyComb.eulerian(80,46)
479233115556431544590242725604764819710804657716559663474197243072029896491056927532566934037906913449948849894719330

"""